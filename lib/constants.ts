import bindings from './bindings';
export const crypto_aead_chacha20poly1305_ABYTES: number = bindings.crypto_aead_chacha20poly1305_ABYTES as number;
export const crypto_aead_chacha20poly1305_ietf_ABYTES: number = bindings.crypto_aead_chacha20poly1305_ietf_ABYTES as number;
export const crypto_aead_chacha20poly1305_IETF_ABYTES: number = bindings.crypto_aead_chacha20poly1305_IETF_ABYTES as number;
export const crypto_aead_chacha20poly1305_ietf_KEYBYTES: number = bindings.crypto_aead_chacha20poly1305_ietf_KEYBYTES as number;
export const crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX: number = bindings.crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX();
export const crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX: number = bindings.crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX();
export const crypto_aead_chacha20poly1305_ietf_NPUBBYTES: number = bindings.crypto_aead_chacha20poly1305_ietf_NPUBBYTES as number;
export const crypto_aead_chacha20poly1305_IETF_NPUBBYTES: number = bindings.crypto_aead_chacha20poly1305_IETF_NPUBBYTES as number;
export const crypto_aead_chacha20poly1305_ietf_NSECBYTES: number = bindings.crypto_aead_chacha20poly1305_ietf_NSECBYTES as number;
export const crypto_aead_chacha20poly1305_IETF_NSECBYTES: number = bindings.crypto_aead_chacha20poly1305_IETF_NSECBYTES as number;
export const crypto_aead_chacha20poly1305_KEYBYTES: number = bindings.crypto_aead_chacha20poly1305_KEYBYTES as number;
export const crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX: number = bindings.crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX();
export const crypto_aead_chacha20poly1305_NPUBBYTES: number = bindings.crypto_aead_chacha20poly1305_NPUBBYTES as number;
export const crypto_aead_chacha20poly1305_NSECBYTES: number = bindings.crypto_aead_chacha20poly1305_NSECBYTES as number;
export const crypto_aead_xchacha20poly1305_ietf_ABYTES: number = bindings.crypto_aead_xchacha20poly1305_ietf_ABYTES as number;
export const crypto_aead_xchacha20poly1305_IETF_ABYTES: number = bindings.crypto_aead_xchacha20poly1305_IETF_ABYTES as number;
export const crypto_aead_xchacha20poly1305_ietf_KEYBYTES: number = bindings.crypto_aead_xchacha20poly1305_ietf_KEYBYTES as number;
export const crypto_aead_xchacha20poly1305_IETF_KEYBYTES: number = bindings.crypto_aead_xchacha20poly1305_IETF_KEYBYTES as number;
export const crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX: number = bindings.crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX();
export const crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX: number = bindings.crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX();
export const crypto_aead_xchacha20poly1305_ietf_NPUBBYTES: number = bindings.crypto_aead_xchacha20poly1305_ietf_NPUBBYTES as number;
export const crypto_aead_xchacha20poly1305_IETF_NPUBBYTES: number = bindings.crypto_aead_xchacha20poly1305_IETF_NPUBBYTES as number;
export const crypto_aead_xchacha20poly1305_ietf_NSECBYTES: number = bindings.crypto_aead_xchacha20poly1305_ietf_NSECBYTES as number;
export const crypto_aead_xchacha20poly1305_IETF_NSECBYTES: number = bindings.crypto_aead_xchacha20poly1305_IETF_NSECBYTES as number;
export const crypto_auth_BYTES: number = bindings.crypto_auth_BYTES as number;
export const crypto_auth_KEYBYTES: number = bindings.crypto_auth_KEYBYTES as number;
export const crypto_box_BEFORENMBYTES: number = bindings.crypto_box_BEFORENMBYTES as number;
export const crypto_box_MACBYTES: number = bindings.crypto_box_MACBYTES as number;
export const crypto_box_MESSAGEBYTES_MAX: number = bindings.crypto_box_MESSAGEBYTES_MAX();
export const crypto_box_NONCEBYTES: number = bindings.crypto_box_NONCEBYTES as number;
export const crypto_box_PUBLICKEYBYTES: number = bindings.crypto_box_PUBLICKEYBYTES as number;
export const crypto_box_SEALBYTES: number = bindings.crypto_box_SEALBYTES as number;
export const crypto_box_SECRETKEYBYTES: number = bindings.crypto_box_SECRETKEYBYTES as number;
export const crypto_box_SEEDBYTES: number = bindings.crypto_box_SEEDBYTES as number;
export const crypto_generichash_BYTES: number = bindings.crypto_generichash_BYTES as number;
export const crypto_generichash_BYTES_MAX: number = bindings.crypto_generichash_BYTES_MAX as number;
export const crypto_generichash_BYTES_MIN: number = bindings.crypto_generichash_BYTES_MIN as number;
export const crypto_generichash_KEYBYTES: number = bindings.crypto_generichash_KEYBYTES as number;
export const crypto_generichash_KEYBYTES_MAX: number = bindings.crypto_generichash_KEYBYTES_MAX as number;
export const crypto_generichash_KEYBYTES_MIN: number = bindings.crypto_generichash_KEYBYTES_MIN as number;
export const crypto_hash_BYTES: number = bindings.crypto_hash_BYTES as number;
export const crypto_kdf_BYTES_MAX: number = bindings.crypto_kdf_BYTES_MAX as number;
export const crypto_kdf_BYTES_MIN: number = bindings.crypto_kdf_BYTES_MIN as number;
export const crypto_kdf_CONTEXTBYTES: number = bindings.crypto_kdf_CONTEXTBYTES as number;
export const crypto_kdf_KEYBYTES: number = bindings.crypto_kdf_KEYBYTES as number;
export const crypto_kx_PUBLICKEYBYTES: number = bindings.crypto_kx_PUBLICKEYBYTES as number;
export const crypto_kx_SECRETKEYBYTES: number = bindings.crypto_kx_SECRETKEYBYTES as number;
export const crypto_kx_SEEDBYTES: number = bindings.crypto_kx_SEEDBYTES as number;
export const crypto_kx_SESSIONKEYBYTES: number = bindings.crypto_kx_SESSIONKEYBYTES as number;
export const crypto_pwhash_ALG_ARGON2I13: number = bindings.crypto_pwhash_ALG_ARGON2I13 as number;
export const crypto_pwhash_ALG_ARGON2ID13: number = bindings.crypto_pwhash_ALG_ARGON2ID13 as number;
export const crypto_pwhash_ALG_DEFAULT: number = bindings.crypto_pwhash_ALG_DEFAULT as number;
export const crypto_pwhash_BYTES_MAX: number = bindings.crypto_pwhash_BYTES_MAX();
export const crypto_pwhash_BYTES_MIN: number = bindings.crypto_pwhash_BYTES_MIN as number;
export const crypto_pwhash_MEMLIMIT_INTERACTIVE: number = bindings.crypto_pwhash_MEMLIMIT_INTERACTIVE as number;
export const crypto_pwhash_MEMLIMIT_MAX: number = bindings.crypto_pwhash_MEMLIMIT_MAX();
export const crypto_pwhash_MEMLIMIT_MIN: number = bindings.crypto_pwhash_MEMLIMIT_MIN as number;
export const crypto_pwhash_MEMLIMIT_MODERATE: number = bindings.crypto_pwhash_MEMLIMIT_MODERATE as number;
export const crypto_pwhash_MEMLIMIT_SENSITIVE: number = bindings.crypto_pwhash_MEMLIMIT_SENSITIVE as number;
export const crypto_pwhash_OPSLIMIT_INTERACTIVE: number = bindings.crypto_pwhash_OPSLIMIT_INTERACTIVE as number;
export const crypto_pwhash_OPSLIMIT_MAX: number = bindings.crypto_pwhash_OPSLIMIT_MAX as number;
export const crypto_pwhash_OPSLIMIT_MIN: number = bindings.crypto_pwhash_OPSLIMIT_MIN as number;
export const crypto_pwhash_OPSLIMIT_MODERATE: number = bindings.crypto_pwhash_OPSLIMIT_MODERATE as number;
export const crypto_pwhash_OPSLIMIT_SENSITIVE: number = bindings.crypto_pwhash_OPSLIMIT_SENSITIVE as number;
export const crypto_pwhash_PASSWD_MAX: number = bindings.crypto_pwhash_PASSWD_MAX as number;
export const crypto_pwhash_PASSWD_MIN: number = bindings.crypto_pwhash_PASSWD_MIN as number;
export const crypto_pwhash_SALTBYTES: number = bindings.crypto_pwhash_SALTBYTES as number;
export const crypto_pwhash_STRBYTES: number = bindings.crypto_pwhash_STRBYTES as number;
export const crypto_scalarmult_BYTES: number = bindings.crypto_scalarmult_BYTES as number;
export const crypto_scalarmult_SCALARBYTES: number = bindings.crypto_scalarmult_SCALARBYTES as number;
export const crypto_secretbox_KEYBYTES: number = bindings.crypto_secretbox_KEYBYTES as number;
export const crypto_secretbox_MACBYTES: number = bindings.crypto_secretbox_MACBYTES as number;
export const crypto_secretbox_MESSAGEBYTES_MAX: number = bindings.crypto_secretbox_MESSAGEBYTES_MAX();
export const crypto_secretbox_NONCEBYTES: number = bindings.crypto_secretbox_NONCEBYTES as number;
export const crypto_secretstream_xchacha20poly1305_ABYTES: number = bindings.crypto_secretstream_xchacha20poly1305_ABYTES as number;
export const crypto_secretstream_xchacha20poly1305_HEADERBYTES: number = bindings.crypto_secretstream_xchacha20poly1305_HEADERBYTES as number;
export const crypto_secretstream_xchacha20poly1305_KEYBYTES: number = bindings.crypto_secretstream_xchacha20poly1305_KEYBYTES as number;
export const crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX: number = bindings.crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX();
export const crypto_secretstream_xchacha20poly1305_TAG_FINAL: number = bindings.crypto_secretstream_xchacha20poly1305_TAG_FINAL as number;
export const crypto_secretstream_xchacha20poly1305_TAG_MESSAGE: number = bindings.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE as number;
export const crypto_secretstream_xchacha20poly1305_TAG_PUSH: number = bindings.crypto_secretstream_xchacha20poly1305_TAG_PUSH as number;
export const crypto_secretstream_xchacha20poly1305_TAG_REKEY: number = bindings.crypto_secretstream_xchacha20poly1305_TAG_REKEY as number;
export const crypto_shorthash_BYTES: number = bindings.crypto_shorthash_BYTES as number;
export const crypto_shorthash_KEYBYTES: number = bindings.crypto_shorthash_KEYBYTES as number;
export const crypto_sign_BYTES: number = bindings.crypto_sign_BYTES as number;
export const crypto_sign_MESSAGEBYTES_MAX: number = bindings.crypto_sign_MESSAGEBYTES_MAX();
export const crypto_sign_PUBLICKEYBYTES: number = bindings.crypto_sign_PUBLICKEYBYTES as number;
export const crypto_sign_SECRETKEYBYTES: number = bindings.crypto_sign_SECRETKEYBYTES as number;
export const crypto_sign_SEEDBYTES: number = bindings.crypto_sign_SEEDBYTES as number;
export const SODIUM_LIBRARY_VERSION_MAJOR: number = bindings.SODIUM_LIBRARY_VERSION_MAJOR as number;
export const SODIUM_LIBRARY_VERSION_MINOR: number = bindings.SODIUM_LIBRARY_VERSION_MINOR as number;
export const crypto_pwhash_STRPREFIX: string = bindings.crypto_pwhash_STRPREFIX();
export const SODIUM_VERSION_STRING: string = bindings.SODIUM_VERSION_STRING();
