name: Continuous Delivery
env:
  DEBUG: napi:*
  APP_NAME: sodium
  MACOSX_DEPLOYMENT_TARGET: '10.13'
  SODIUM_DISABLE_PIE: 1

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request: null

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            architecture: x64
            build: |
              yarn rs:build
              strip -x *.node
          - host: windows-latest
            build: yarn rs:build
            target: x86_64-pc-windows-msvc
            architecture: x64
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            architecture: x64
            docker: |
              docker pull $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian
              docker tag $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian builder
            build: |
              docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder yarn rs:build && strip *.node
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            architecture: x64
            docker: |
              docker pull ghcr.io/brooooooklyn/canvas/musl-builder:lts
              docker tag ghcr.io/brooooooklyn/canvas/musl-builder:lts builder
            build: docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder sh -c "apk add gcc g++ make libffi-dev openssl-dev autoconf automake libtool libsodium-dev libsodium pkgconfig && SODIUM_USE_PKG_CONFIG=1 LIBSODIUM_STATIC=1 yarn rs:build && strip *.node"
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              yarn rs:build --target=aarch64-apple-darwin
              strip -x *.node
          - host: ubuntu-latest
            architecture: x64
            target: aarch64-unknown-linux-gnu
            setup: |
              sudo apt-get update
              sudo apt-get install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu -y
            build: |
              yarn rs:build --target=aarch64-unknown-linux-gnu
              aarch64-linux-gnu-strip *.node
          - host: ubuntu-latest
            architecture: x64
            target: aarch64-linux-android
            build: |
              export CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER="${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang"
              export CC="${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang"
              export CXX="${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang++"
              export PATH="${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH}"
              yarn rs:build --target aarch64-linux-android
              ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip *.node
          - host: ubuntu-latest
            architecture: x64
            target: aarch64-unknown-linux-musl
            downloadTarget: aarch64-unknown-linux-musl
            docker: |
              docker pull ghcr.io/brooooooklyn/canvas/musl-builder:lts
              docker tag ghcr.io/brooooooklyn/canvas/musl-builder:lts builder
            build: |
              docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder sh -c "rustup toolchain install $(cat ./rust-toolchain) && rustup target add aarch64-unknown-linux-musl && apk add gcc g++ make curl libffi-dev openssl-dev autoconf automake libtool pkgconfig libsodium-dev libsodium && SODIUM_USE_PKG_CONFIG=1 LIBSODIUM_STATIC=1 PKG_CONFIG_SYSROOT_DIR='/aarch64-linux-musl-cross' yarn rs:build --target=aarch64-unknown-linux-musl && /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip *.node"
    name: Nightly - ${{ matrix.settings.target }} - node@16
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
      - name: Setup node
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3
        with:
          node-version: 16
          check-latest: true
          cache: yarn
          architecture: ${{ matrix.settings.architecture }}
      - name: Install
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}
      - name: Generate Cargo.lock
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # tag=v1
        with:
          command: generate-lockfile
      - name: Cache cargo registry
        uses: actions/cache@4b0cf6cc4619e737324ddfcec08fff2413359514 # tag=v3
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.settings.target }}-node@16-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@4b0cf6cc4619e737324ddfcec08fff2413359514 # tag=v3
        with:
          path: ~/.cargo/git
          key: ${{ matrix.settings.target }}-node@16-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache NPM dependencies
        uses: actions/cache@4b0cf6cc4619e737324ddfcec08fff2413359514 # tag=v3
        with:
          path: node_modules
          key: npm-cache-${{ matrix.settings.target }}-node@16-${{ hashFiles('yarn.lock') }}
      - name: Pull latest image
        run: ${{ matrix.settings.docker }}
        env:
          DOCKER_REGISTRY_URL: ghcr.io
        if: ${{ matrix.settings.docker }}
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # tag=v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  build-freebsd:
    runs-on: macos-10.15
    name: Build FreeBSD
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
      - name: Build
        id: build
        uses: vmactions/freebsd-vm@45665d548dfeadbbebb5bb7971150211525fee46 # tag=v0.1.6
        env:
          DEBUG: napi:*
          RUSTUP_HOME: /usr/local/rustup
          CARGO_HOME: /usr/local/cargo
          RUSTUP_IO_THREADS: 1
        with:
          envs: DEBUG RUSTUP_HOME CARGO_HOME RUSTUP_IO_THREADS
          usesh: true
          mem: 3000
          prepare: |
            pkg install -y curl node14 python2
            curl -qL https://www.npmjs.com/install.sh | sh
            npm install -g yarn
            curl https://sh.rustup.rs -sSf --output rustup.sh
            sh rustup.sh -y --profile minimal --default-toolchain stable
            export PATH="/usr/local/cargo/bin:$PATH"
            echo "~~~~ rustc --version ~~~~"
            rustc --version
            echo "~~~~ node -v ~~~~"
            node -v
            echo "~~~~ yarn --version ~~~~"
            yarn --version
          run: |
            export PATH="/usr/local/cargo/bin:$PATH"
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            yarn install --immutable
            yarn rs:build
            yarn ts:build
            strip -x *.node
            rm -rf node_modules
            rm -rf target
      - name: Upload artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # tag=v3
        with:
          name: bindings-freebsd
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  publish:
    name: Publish packages
    runs-on: ubuntu-latest
    needs:
      - build-freebsd
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
      - name: Setup node
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3
        with:
          node-version: 16
          check-latest: true
          cache: yarn
      - name: Cache NPM dependencies
        uses: actions/cache@4b0cf6cc4619e737324ddfcec08fff2413359514 # tag=v3
        with:
          path: node_modules
          key: npm-cache-ubuntu-latest-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            npm-cache-
      - name: Install dependencies
        run: yarn install --immutable
      - name: Download all artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          path: artifacts
      - name: Move artifacts
        run: yarn artifacts
      - name: List packages
        run: ls -R ./npm
      - name: Build Typescript
        run: yarn ts:build
        shell: bash
      - name: Publish
        run: yarn npm:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
